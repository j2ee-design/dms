<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xinho.dao.ApartmentDao">
  <resultMap id="BaseResultMap" type="com.xinho.bean.Apartment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="dic_apart_type" jdbcType="INTEGER" property="dicApartType" />
    <result column="floor_num" jdbcType="INTEGER" property="floorNum" />
    <result column="dorm_num" jdbcType="INTEGER" property="dormNum" />
    <result column="used_dorm" jdbcType="INTEGER" property="usedDorm" />
    <result column="dorm_bed_num" jdbcType="INTEGER" property="dormBedNum" />
    <result column="all_bed" jdbcType="INTEGER" property="allBed" />
    <result column="remain_bed" jdbcType="INTEGER" property="remainBed" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, dic_apart_type, floor_num, dorm_num, used_dorm, dorm_bed_num, all_bed, 
    remain_bed
  </sql>
  <select id="selectByExample" parameterType="com.xinho.bean.ApartmentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from apartment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from apartment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from apartment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xinho.bean.ApartmentExample">
    delete from apartment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xinho.bean.Apartment">
    insert into apartment (id, name, dic_apart_type, 
      floor_num, dorm_num, used_dorm, 
      dorm_bed_num, all_bed, remain_bed
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{dicApartType,jdbcType=INTEGER}, 
      #{floorNum,jdbcType=INTEGER}, #{dormNum,jdbcType=INTEGER}, #{usedDorm,jdbcType=INTEGER}, 
      #{dormBedNum,jdbcType=INTEGER}, #{allBed,jdbcType=INTEGER}, #{remainBed,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xinho.bean.Apartment">
    insert into apartment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="dicApartType != null">
        dic_apart_type,
      </if>
      <if test="floorNum != null">
        floor_num,
      </if>
      <if test="dormNum != null">
        dorm_num,
      </if>
      <if test="usedDorm != null">
        used_dorm,
      </if>
      <if test="dormBedNum != null">
        dorm_bed_num,
      </if>
      <if test="allBed != null">
        all_bed,
      </if>
      <if test="remainBed != null">
        remain_bed,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="dicApartType != null">
        #{dicApartType,jdbcType=INTEGER},
      </if>
      <if test="floorNum != null">
        #{floorNum,jdbcType=INTEGER},
      </if>
      <if test="dormNum != null">
        #{dormNum,jdbcType=INTEGER},
      </if>
      <if test="usedDorm != null">
        #{usedDorm,jdbcType=INTEGER},
      </if>
      <if test="dormBedNum != null">
        #{dormBedNum,jdbcType=INTEGER},
      </if>
      <if test="allBed != null">
        #{allBed,jdbcType=INTEGER},
      </if>
      <if test="remainBed != null">
        #{remainBed,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xinho.bean.ApartmentExample" resultType="java.lang.Long">
    select count(*) from apartment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update apartment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.dicApartType != null">
        dic_apart_type = #{record.dicApartType,jdbcType=INTEGER},
      </if>
      <if test="record.floorNum != null">
        floor_num = #{record.floorNum,jdbcType=INTEGER},
      </if>
      <if test="record.dormNum != null">
        dorm_num = #{record.dormNum,jdbcType=INTEGER},
      </if>
      <if test="record.usedDorm != null">
        used_dorm = #{record.usedDorm,jdbcType=INTEGER},
      </if>
      <if test="record.dormBedNum != null">
        dorm_bed_num = #{record.dormBedNum,jdbcType=INTEGER},
      </if>
      <if test="record.allBed != null">
        all_bed = #{record.allBed,jdbcType=INTEGER},
      </if>
      <if test="record.remainBed != null">
        remain_bed = #{record.remainBed,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update apartment
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      dic_apart_type = #{record.dicApartType,jdbcType=INTEGER},
      floor_num = #{record.floorNum,jdbcType=INTEGER},
      dorm_num = #{record.dormNum,jdbcType=INTEGER},
      used_dorm = #{record.usedDorm,jdbcType=INTEGER},
      dorm_bed_num = #{record.dormBedNum,jdbcType=INTEGER},
      all_bed = #{record.allBed,jdbcType=INTEGER},
      remain_bed = #{record.remainBed,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xinho.bean.Apartment">
    update apartment
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="dicApartType != null">
        dic_apart_type = #{dicApartType,jdbcType=INTEGER},
      </if>
      <if test="floorNum != null">
        floor_num = #{floorNum,jdbcType=INTEGER},
      </if>
      <if test="dormNum != null">
        dorm_num = #{dormNum,jdbcType=INTEGER},
      </if>
      <if test="usedDorm != null">
        used_dorm = #{usedDorm,jdbcType=INTEGER},
      </if>
      <if test="dormBedNum != null">
        dorm_bed_num = #{dormBedNum,jdbcType=INTEGER},
      </if>
      <if test="allBed != null">
        all_bed = #{allBed,jdbcType=INTEGER},
      </if>
      <if test="remainBed != null">
        remain_bed = #{remainBed,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xinho.bean.Apartment">
    update apartment
    set name = #{name,jdbcType=VARCHAR},
      dic_apart_type = #{dicApartType,jdbcType=INTEGER},
      floor_num = #{floorNum,jdbcType=INTEGER},
      dorm_num = #{dormNum,jdbcType=INTEGER},
      used_dorm = #{usedDorm,jdbcType=INTEGER},
      dorm_bed_num = #{dormBedNum,jdbcType=INTEGER},
      all_bed = #{allBed,jdbcType=INTEGER},
      remain_bed = #{remainBed,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>